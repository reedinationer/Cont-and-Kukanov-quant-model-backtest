# Start up the Kafka image and specify a constant PLAINTEXT port to use in our scripts.
services:
  broker:
    image: apache/kafka:latest
    container_name: broker
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://172.31.16.1:9092,CONTROLLER://172.31.16.1:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.31.16.1:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@172.31.16.1:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    ports:
      - "9092:9092"

  init-kafka:
    image: confluentinc/cp-kafka:6.1.1
    container_name: init
    depends_on:
      - broker
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server 172.31.16.1:9092  --list
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server 172.31.16.1:9092  --create --if-not-exists --topic mock_l1_stream --replication-factor 1 --partitions 1
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server 172.31.16.1:9092  --list
      "

  pyscript:
    build: . # Build this project to interact with our kafka broker
    container_name: pyscript
    depends_on:
      - init-kafka
